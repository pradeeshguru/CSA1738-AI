import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder

# Load dataset from CSV file
data = pd.read_csv('IRIS.csv')

# Separate features and target variable
X = data.drop('species', axis=1)  # Assuming 'species' is the target column
y = data['species']

# Encode the target variable if it's categorical
label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.3, random_state=42)

# Initialize and train the Feedforward Neural Network
clf = MLPClassifier(hidden_layer_sizes=(10,), max_iter=1000, random_state=42)
clf.fit(X_train, y_train)

# Make predictions on the test set
y_pred = clf.predict(X_test)

# Decode the predictions back to original labels
y_pred_labels = label_encoder.inverse_transform(y_pred)

# Decode the actual test labels back to original labels
y_test_labels = label_encoder.inverse_transform(y_test)

# Print the accuracy of the model
print(f"Accuracy: {accuracy_score(y_test_labels, y_pred_labels):.2f}")
